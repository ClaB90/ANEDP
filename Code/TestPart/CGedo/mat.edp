real T=1.;
int nsol=10;
real dt=T/nsol;int n=10;
real a,b;
a=-25.;
b=-1.;
func wb = 0.;
func g = sin(pi*x)*sin(pi*y);
mesh Th=square(n,n);
fespace Ph(Th,P1);
fespace Yh(Th,P2);
Yh w,wtest,wold;
real[int,int] sh(nsol,Yh.ndof);
for(int i=0;i<nsol;i++)
{
	for(int k=0;k<Yh.ndof;k++)
	{
		sh(i,k)=randint32();
	}
}

real[int,int] th(nsol,Ph.ndof);
for(int i=0;i<nsol;i++)
{
	for(int k=0;k<Ph.ndof;k++)
	{
		th(i,k)=randint32();
	}
}

real gamma1,gamma2,gamma3,gamma4;
varf s(w,wtest) =   int2d(Th)( w*wtest/dt )
	        	  + int2d(Th)( gamma1*( dx(w)*dx(wtest) + dy(w)*dy(wtest) ) )
				  + on(1,2,3,4, w=wb);

func w0=g;
matrix S; 
real[int] statebc(Yh.ndof);


func real[int,int] mat1(real[int,int] &xx, real[int,int] &ww) {
	Ph listate,loldstate;
    Yh indold,indnew;
	varf tnnew(w,wtest) = int2d(Th)( wold*wtest/dt) - int2d(Th)( gamma2*( dx(wold)*dx(wtest) + dy(wold)*dy(wtest) ) ) + int2d(Th)(gamma3*((indnew(x,y)<=b)*(indnew(x,y)>=a)*listate*wtest))+ int2d(Th)(gamma4*((indold(x,y)<=b)*(indold(x,y)>=a)*loldstate*wtest));
	
	real[int] tmp(Yh.ndof);
	real[int,int] stateSolCG(nsol,Yh.ndof);
	
	wold=w0;
	gamma1=1./2.;
    gamma2=0.;
    gamma3=0.;
    gamma4=1./2.;
	
	loldstate[]=xx(0,:);
    listate[]=xx(1,:);
	indold[]=ww(0,:);
	indnew[]=ww(1,:);
	
	S=s(Yh,Yh,solver=GMRES);
	statebc=s(0,Yh);

    tmp=tnnew(0,Yh);
    tmp=tmp+statebc;
	
	w[]=(S^-1)*tmp;
	stateSolCG(0,:)=w[];
	wold=w;
	loldstate=listate;
	indold=indnew;
	
	for(int i=1; i<nsol-1; i++)
	{
		gamma1=1./2.;
	    gamma2=1./2.;
	    gamma3=0.;
	    gamma4=1.;
		
		listate[] = xx(i+1,:);
		indnew[]=ww(i+1,:);
	
		tmp = tnnew(0,Yh);
		tmp += statebc;
		
		w[] = S^-1*tmp;
		stateSolCG(i,:)=w[];
		
		wold=w;
		loldstate = listate;
		indold=indnew;

	}
	
	gamma1=0.;
    gamma2=1./2.;
    gamma3=1./2.;
    gamma4=0.;
	
	S=s(Yh,Yh);
	tmp = tnnew(0,Yh);
	tmp += statebc;
	w[] = S^-1*tmp;
	
	stateSolCG(nsol-1,:)=w[];
	
	return stateSolCG;
}
	
	
func real[int,int] mat2(real[int,int] &ww, real[int,int] &xx)
{
	real[int,int] res(nsol,Yh.ndof);
	real[int,int] pro(nsol,Yh.ndof);
	pro=adjCG(xx);
	res=mat1(ww,pro);
	res=(1./alpha)*res;
	res=res+xx;
}
	










}



real[int,int] WW(nsol,Yh.ndof);
WW=mat1(th,sh);
Yh gh;
for (int h=0;h<nsol;h++)
{
	gh[]=WW(h,:);
	plot(gh,wait=1,fill=1);
}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		











