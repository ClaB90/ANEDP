real T=1.;
int nsol=10;
real dt=T/nsol;int n=10;
real a,b;
a=-25.;
b=-1.;
func wb = 0.;
func g = sin(pi*x)*sin(pi*y);
mesh Th=square(n,n);
fespace Ph(Th,P1);
fespace Yh(Th,P2);
Yh w,wtest,wold;
real[int,int] sh(nsol,Yh.ndof);
for(int i=0;i<nsol;i++)
{
	for(int k=0;k<Yh.ndof;k++)
	{
		sh(i,k)=randint32();
	}
}

real[int,int] th(nsol,Ph.ndof);
for(int i=0;i<nsol;i++)
{
	for(int k=0;k<Ph.ndof;k++)
	{
		th(i,k)=randint32();
	}
}

real gamma1,gamma2,gamma3,gamma4;
varf s(w,wtest) =   int2d(Th)( w*wtest/dt )
	        	  + int2d(Th)( gamma1*( dx(w)*dx(wtest) + dy(w)*dy(wtest) ) )
				  + on(1,2,3,4, w=wb);

func w0=g;
matrix S; 
real[int] statebc(Yh.ndof);

/* nel file funzioni.edp sono contenute le funzioni che caratterizzano l'operatore B ed yd
 */
include "funzioniCG.edp";



real[int,int] WW(nsol,Yh.ndof);
WW=mat1(th,sh);
Yh gh;
for (int h=0;h<nsol;h++)
{
	gh[]=WW(h,:);
	plot(gh,wait=1,fill=1);
}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		











