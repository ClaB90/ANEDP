/****************** Politecnico di Milano - ANEDP project ******************/
/* 														 					*
 *  	authors Edoardo Arbib 							 					*
 *				Claudia Bonomi 							 					*
 *											   			 					*
 *  	Descrizione: definizioni delle funzioni per errore 			 		*
 *						Problema aggiunto									*
 *																			*
 * 		Dipendenze:	funzioni.edp -> waT e a1						        *		
 *				    soluzioniEsatte -> definizioni funzioni esatte			*
 * 					main -> nsol						 					*
 * 					state -> statesol[]					 					*
 * 														 					*
 ****************************************************************************/


/* Per il calcolo dell'errore di || p - p_k ||L2 viene sommata ad ogni passo temporale la norma L2
 * la funzione seguente verr√† chiamata ad ogni passo temporale sommandone il risultato,
 */
func real normL2adjt()
{
	real tmp=0.;
	
	tmp = int2d(Th)( (p-pe)^2 );
	
	return tmp;
} 

/* Per il calcolo dell'errore di || p - p_k ||L2 viene sommata ad ogni passo temporale la norma L2
 * la funzione seguente sfrutta il vettore di soluzioni del problema di stato
 */
func real normL2adj()
{
	real tmp=0., savet=0.;
	
	savet = 0.;
	t=dt;
	
	for(int i =0; i<nsol; i++)
	{
		tmp += dt*int2d(Th)( (adjsol[i]-pe)^2 );
		t += dt;
	}
	
	tmp = sqrt(tmp);
	
	t=savet;
	
	return tmp;
} 

/* Per il calcolo dell'errore di || ues -u_k ||Linf
*/
func real normLinfadj()
{
	real[int] LinfSpazio(nsol);
	real norm;
	
	t=0.;
	
	for(int i=0; i<nsol; i++)
	{
		LinfSpazio[i] = adjsol[i] - pe;
		LinfSpazio[i] = abs(LinfSpazio[i]);
		
		t+=dt;
	}
	
	norm = LinfSpazio.linfty;
	
	return norm;
}