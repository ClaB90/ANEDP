/****************** Politecnico di Milano - ANEDP project ******************/
/* 														 					*
 *  	authors Edoardo Arbib 							 					*
 *				Claudia Bonomi 							 					*
 *											   			 					*
 *  	Descrizione: Per il problema di stato definiamo  					*
 *						- spazi funzionali		         					*
 *						- problema spaziale				 					*
 *					    - funzione per la soluzione del problema temporale  *
 * 														 					*
 ****************************************************************************/

// k == soluzione all'istante iniziale
func w0 = sin(2*x)*sin(2*y);

// wb funzione al bordo di dirchlet 
func wb = 0.;

/*
int totalsol=1, tmp=t;
while(tmp <= T)
{
	totalsol++;
}
totalsol++;
*/

/****** 01.SPAZI FUNZIONALI ******/
fespace Yh( Th, P0 );
Yh w, wold, wtest, fold;
Yh[int] sol(T/dt+1);

/****** 02.PROBLEMA SPAZIALE ******/ 
 
/*	gamma0 and gamma1 legend
 * 	EI gamma0 = 0 
 *     gamma1= 0.5 poichè abbiamo il passo temporale dimezzato
 *  CN gamma0=gamma1= 0.5
 *  EA gamma0 = 0.5 poichè abbiamo il passo temporale dimezzato
 *	  gamma1 = 0.
 */
real gamma0,gamma1;

problem state(w, wtest) =   int2d(Th)( w*wtest/dt )
						  - int2d(Th)( wold*wtest/dt )
						  + int2d(Th)( gamma0*( dx(wold)*dx(wtest) + dy(wold)*dy(wtest) ) ) 
						  + int2d(Th)( gamma1*( dx(w)*dx(wtest) + dy(w)*dy(wtest) ) ) 
						  - int2d(Th)( gamma0*( (fold+u)*wtest ) ) 
						  - int2d(Th)( gamma1*( (f+u)*wtest ) ) 
						  + on(1,2,3,4, w=wb);

/* NB - u non cambia al passo temporale della w quello che cambia è la f, se dipende dal tempo, 
 *   	 quindi bisogna tener traccia della fold;
 */


/****** 03.FUNZIONE PER SOLUZIONE IN TEMPO ******/ 

func real statet()
{
	cout << "State " << endl;
	
	//inizializzo le variabili iniziali ogni volta che chiamo la funzione
	int i=0;
	t=0.01;
	wold=w0;
	
	//Primo passo con EI
	gamma0=0.;
	gamma1=0.5;
	
	state;
	plot( w, value = 1, fill=1, wait = 0, cmm="w" );
	cout << "siamo al tempo   = " << t << endl;
	
	wold=w;
	fold=f;
	
	sol[i] = w;
	i++;
	t += dt;

	while( t <= T )
	{
		gamma0=0.5;
		gamma1=0.5;
		
		state;
	    plot( w, value = 1, fill=1, wait = 0, cmm="w" );
		cout << "siamo al tempo   = " << t << endl;
		
		wold=w;
		fold=f;
		
		sol[i]=w;
		
		t += dt;
		i++;
	}
	
	gamma0=0.5;
	gamma1=0.;
	
	state;
	cout << "siamo al tempo = " << t << endl;
	plot( w, value = 1, fill=1, wait = 0, cmm="w final" );
	
	sol[i]=w;
	
	return 0;
}



















